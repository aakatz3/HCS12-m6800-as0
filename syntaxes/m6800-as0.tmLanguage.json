{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Motorola 6800 Assembly Language",
  "patterns": [
    {
      "include": "#variables"
    },
    {
      "include": "#opcodes"
    },
    {
      "include": "#assemble-list"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#operands"
    },
    {
      "include": "#strings-single"
    }
  ],
  "repository": {
    "opcodes": {
      "patterns": [
        {
          "match": "\\b(?i)((asl|asr|lsr|rol|ror)([abdxy])?)\\b",
          "name": "keyword.control.opcode.shift.m6800-as0"
        },
        {
          "match": "\\b(?i)((add|and|adc|bit|eor|ora|sbc|sub|cmp|lda|sta|psh|pul)[abdxy])\\b",
          "name": "keyword.control.opcode.ab.m6800-as0"
        },
        {
          "match": "\\b(?i)((clr|com|dec|inc|neg|tst|ld)([ab])?)\\b",
          "name": "keyword.control.opcode.abmem.m6800-as0"
        },
        {
          "match": "\\b(?i)(((lda|sta)([ab])?)|(ld|st)([dxys]?))\\b",
          "name": "keyword.control.opcode.mem.m6800-as0"
        },
        {
          "match": "\\b(?i)(b[ceghlmnprsv][aceilqrst]|brclr|brset|bclr|dbne)\\b",
          "name": "keyword.control.opcode.branch.m6800-as0"
        },
        {
          "match": "\\b(?i)(aba|cba|clc|cli|clv|cpx|leas|cpxa|lbhi|leas|bgnd|nop|daa|des|dex|ins|inx|jmp|jsr|lds|ldx|nop|rti|rts|sba|sec|sei|sev|sts|stx|swi|tab|tap|tba|tpa|tsx|txs|wai|mov|movw|movb|bset)\\b",
          "name": "keyword.control.opcode.misc.m6800-as0"
        }
      ]
    },
    "assemble-list": {
      "patterns": [
        {
          "match": "^ {5}(([0-9a-f]{2} )*[0-9a-f]{2})",
          "name": "constant.numeric.list-fcb2.m6800-as0"
        },
        {
          "match": "^(?i)([0-9]* [0-9a-f]* ([0-9a-f]{2} )*)",
          "name": "constant.numeric.list-assembly-code.m6800-as0"
        },
        {
          "match": "\\b(?i)([0-9a-f]{4})\\b",
          "name": "constant.numeric.list-xref.m6800-as0"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "^\\*.*$",
          "name": "comment.line.asterisk.m6800-as0"
        },
        {
          "match": "^(\\w+)(\\t*\\s+|\\t+)(?=.+$)",
          "name": "asm.label.hcs12"
        },
        {
          "match": ";.*$",
          "name": "comment.line.semicolon.m6800-as0"
        }

        
      ]
    },
    "strings": {
      "name": "string.quoted.double.m6800-as0",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.m6800-as0"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "^(\\w+)(\\t*\\s+|\\t+)(?=(?:\\bdc|\\bds|\\bequ))",
          "name": "variable.hcs12"
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "match": "\\b(?i)(end|equ|opt|org|page|include|xdef|absentry)\\b",
          "name": "keyword.control.directive.m6800-as0"
        },
        {
          "match": "\\b(?i)(bsz|fcb|fcc|fdb|fill|rmb|zmb|d[cs]\\.[bw])\\b",
          "name": "keyword.control.directive.data.m6800-as0"
        },
        {
          "match": "\\b(&|%|\\^|\\*|\\/|\\-|\\+|\\|)",
          "name": "keyword.function.operator.m6800-as0"
        }
      ]
    },
    "operands": {
      "patterns": [
        {
          "match": "\\b[\\s+\\t,]+([+-]?)(@[0-7]+|%[01]+|\\$[A-Fa-f0-9]+|[0-9]+|\\w+),(SP|PC|X|Y|x)\\b",
          "name": "keyword.operand.index.m6800-as0"
        },
        {
          "match": "\\b[\\s+\\t]+\\#(@[0-7]+|%[01]+|\\$[A-Fa-f0-9]+|[0-9]+)",
          "name": "keyword.operand.immediate.m6800-as0"
        },
        {
          "match": "\\b[\\s+\\t]+\\#\\w+",
          "name": "keyword.operand.indirect.m6800-as0"
        },
        {
          "match": "'.'",
          "name": "string.quoted.single.singlechar.m6800-as0"
        },
        {
          "match": "'.\\b",
          "name": "string.quoted.single.onequote.m6800-as0"
        },
        {
          "match": "%[01]+",
          "name": "constant.numeric.binary.m6800-as0"
        },
        {
          "match": "@[0-7]+",
          "name": "constant.numeric.octal.m6800-as0"
        },
        {
          "match": "\\b[0-9]+\\b",
          "name": "constant.numeric.decimal.m6800-as0"
        },
        {
          "match": "(\\$|\\b0x)[A-Fa-f0-9]+\\b",
          "name": "constant.numeric.hex.m6800-as0"
        },
        {
          "match": "'(;|\\[|\\]|\\$|@|#|!| |%|\\+|\\^|\\&|\\*|\\(|\\)|\\{|\\}|\\\\|\\||\\\"|\\-|\\=|\\,|\\:|\\'|\\<|\\>|\\.|\\?|\\/|\\~|\\`)",
          "name": "string.quoted.single.symbol.m6800-as0"
        }
      ]
    },
    "strings-single": {
      "patterns": [
        {
          "match": "('[^']*')",
          "name": "string.quoted.single.m6800-as0"
        }
      ]
    }
  },
  "scopeName": "source.m6800-as0"
}
